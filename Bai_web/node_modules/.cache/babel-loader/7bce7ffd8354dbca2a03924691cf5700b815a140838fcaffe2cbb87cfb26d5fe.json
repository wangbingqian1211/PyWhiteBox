{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      records: [],\n      code: '',\n      responseBlocks: [],\n      selectedOption: 'option1',\n      options: [{\n        value: 'option1',\n        label: '基本路径测试'\n      }, {\n        value: 'option2',\n        label: '路径覆盖测试'\n      }, {\n        value: 'option3',\n        label: 'GPT测试'\n      }],\n      savedRecords: [],\n      // 存储保存的记录\n      currentRecordId: null // 跟踪当前显示的记录ID\n    };\n  },\n  methods: {\n    autoResize() {\n      const element = this.$refs.codeInput;\n      element.style.height = 'auto';\n      element.style.height = element.scrollHeight + 'px';\n    },\n    async submitCode() {\n      if (this.code.trim() === '') return;\n      const currentCode = this.code;\n      try {\n        const processResponse = await fetch('http://127.0.0.1:5001/api/process_code', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            code: this.code,\n            option: this.selectedOption\n          })\n        });\n        if (processResponse.ok) {\n          const result = await processResponse.json();\n          const newBlock = {\n            code: currentCode,\n            flowchartPath: `http://127.0.0.1:5001${result.flowchartPath}`\n          };\n          if (this.selectedOption === 'option1' || this.selectedOption === 'option2') {\n            newBlock.testCases = result.testCases;\n          } else if (this.selectedOption === 'option3') {\n            newBlock.responseText = result.responseText;\n          }\n          this.responseBlocks.push(newBlock);\n          this.code = '';\n          this.resetTextareaHeight();\n        } else {\n          const error = await processResponse.json();\n          console.error('Error processing code:', error.error);\n          alert(`Error: ${error.error}`);\n        }\n      } catch (error) {\n        console.error('Error submitting code:', error);\n        alert('提交代码时发生错误，请检查控制台以获取详细信息。');\n      }\n    },\n    saveRecord() {\n      if (this.code.trim() === '') return;\n      const newRecord = {\n        id: Date.now(),\n        // 使用时间戳作为唯一ID\n        name: `记录 ${this.savedRecords.length + 1}`,\n        code: this.code,\n        responseBlocks: [...this.responseBlocks]\n      };\n      this.savedRecords.push(newRecord);\n      this.currentRecordId = newRecord.id;\n      alert('记录已保存');\n    },\n    loadRecord(recordId) {\n      const record = this.savedRecords.find(r => r.id === recordId);\n      if (record) {\n        this.currentRecordId = record.id;\n        this.code = record.code;\n        this.responseBlocks = [...record.responseBlocks];\n        this.autoResize();\n      }\n    },\n    resetTextareaHeight() {\n      const element = this.$refs.codeInput;\n      element.style.height = 'auto';\n    },\n    formatInputs(inputs) {\n      return JSON.stringify(inputs, null, 2).replace(/\"/g, \"'\");\n    }\n  }\n};","map":{"version":3,"names":["data","records","code","responseBlocks","selectedOption","options","value","label","savedRecords","currentRecordId","methods","autoResize","element","$refs","codeInput","style","height","scrollHeight","submitCode","trim","currentCode","processResponse","fetch","method","headers","body","JSON","stringify","option","ok","result","json","newBlock","flowchartPath","testCases","responseText","push","resetTextareaHeight","error","console","alert","saveRecord","newRecord","id","Date","now","name","length","loadRecord","recordId","record","find","r","formatInputs","inputs","replace"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 左侧菜单 -->\r\n    <aside class=\"sidebar\">\r\n      <ul>\r\n        <li v-for=\"record in savedRecords\" :key=\"record.id\" @click=\"loadRecord(record.id)\">\r\n          {{ record.name }}\r\n        </li>\r\n      </ul>\r\n    </aside>\r\n\r\n    <!-- 右侧内容区域 -->\r\n    <main class=\"main-content\">\r\n      <!-- 选择方法的独立区域 -->\r\n      <div class=\"selection-area\">\r\n        <el-select v-model=\"selectedOption\" placeholder=\"请选择测试方法\" style=\"width: 300px;\">\r\n          <el-option\r\n              v-for=\"item in options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n      </div>\r\n\r\n      <!-- 上半部分，包含用户输入显示和测试结果 -->\r\n      <div class=\"upper-content\">\r\n        <div v-for=\"(block, index) in responseBlocks\" :key=\"index\" class=\"response-block centered-content\">\r\n          <div v-if=\"block.flowchartPath\">\r\n            <img :src=\"block.flowchartPath\" alt=\"流程图\" class=\"flowchart-image\"/>\r\n          </div>\r\n          <div class=\"user-input\">\r\n            <pre>{{ block.code }}</pre>\r\n          </div>\r\n          <div class=\"output-area\">\r\n            <div v-if=\"block.testCases && block.testCases.length\">\r\n              <div v-for=\"(testCase, i) in block.testCases\" :key=\"i\" class=\"test-case\">\r\n                <p>测试用例 {{ i + 1 }}:</p>\r\n                <p>&nbsp;&nbsp;输入: {{ formatInputs(testCase.inputs) }}</p>\r\n                <p>&nbsp;&nbsp;条件: {{ testCase.conditions }}</p>\r\n              </div>\r\n            </div>\r\n            <div v-else-if=\"block.responseText\">\r\n              <pre class=\"response-text\">{{ block.responseText }}</pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"responseBlocks.length === 0\" class=\"intro-content\">\r\n          <h1>白盒测试通</h1>\r\n          <p>你的自动测试小助手</p>\r\n          <p>输入测试代码，你将得到：程序流程图、基本路径集合、测试用例</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 下半部分，固定的输入框 -->\r\n      <div class=\"input-area\">\r\n        <div class=\"input-row\">\r\n          <textarea\r\n              v-model=\"code\"\r\n              placeholder=\"请输入你要进行测试的代码\"\r\n              class=\"code-input\"\r\n              @input=\"autoResize\"\r\n              ref=\"codeInput\"\r\n          ></textarea>\r\n          <button @click=\"submitCode\" class=\"submit-button\">提交代码</button>\r\n          <button @click=\"saveRecord\" class=\"save-button\">保存记录</button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      records: [],\r\n      code: '',\r\n      responseBlocks: [],\r\n      selectedOption: 'option1',\r\n      options: [\r\n        { value: 'option1', label: '基本路径测试' },\r\n        { value: 'option2', label: '路径覆盖测试' },\r\n        { value: 'option3', label: 'GPT测试' }\r\n      ],\r\n      savedRecords: [], // 存储保存的记录\r\n      currentRecordId: null // 跟踪当前显示的记录ID\r\n    };\r\n  },\r\n  methods: {\r\n    autoResize() {\r\n      const element = this.$refs.codeInput;\r\n      element.style.height = 'auto';\r\n      element.style.height = element.scrollHeight + 'px';\r\n    },\r\n    async submitCode() {\r\n      if (this.code.trim() === '') return;\r\n      const currentCode = this.code;\r\n      try {\r\n        const processResponse = await fetch('http://127.0.0.1:5001/api/process_code', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ code: this.code, option: this.selectedOption })\r\n        });\r\n        if (processResponse.ok) {\r\n          const result = await processResponse.json();\r\n          const newBlock = {\r\n            code: currentCode,\r\n            flowchartPath: `http://127.0.0.1:5001${result.flowchartPath}`\r\n          };\r\n          if (this.selectedOption === 'option1' || this.selectedOption === 'option2') {\r\n            newBlock.testCases = result.testCases;\r\n          } else if (this.selectedOption === 'option3') {\r\n            newBlock.responseText = result.responseText;\r\n          }\r\n          this.responseBlocks.push(newBlock);\r\n          this.code = '';\r\n          this.resetTextareaHeight();\r\n        } else {\r\n          const error = await processResponse.json();\r\n          console.error('Error processing code:', error.error);\r\n          alert(`Error: ${error.error}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error submitting code:', error);\r\n        alert('提交代码时发生错误，请检查控制台以获取详细信息。');\r\n      }\r\n    },\r\n    saveRecord() {\r\n      if (this.code.trim() === '') return;\r\n      const newRecord = {\r\n        id: Date.now(), // 使用时间戳作为唯一ID\r\n        name: `记录 ${this.savedRecords.length + 1}`,\r\n        code: this.code,\r\n        responseBlocks: [...this.responseBlocks]\r\n      };\r\n      this.savedRecords.push(newRecord);\r\n      this.currentRecordId = newRecord.id;\r\n      alert('记录已保存');\r\n    },\r\n    loadRecord(recordId) {\r\n      const record = this.savedRecords.find(r => r.id === recordId);\r\n      if (record) {\r\n        this.currentRecordId = record.id;\r\n        this.code = record.code;\r\n        this.responseBlocks = [...record.responseBlocks];\r\n        this.autoResize();\r\n      }\r\n    },\r\n    resetTextareaHeight() {\r\n      const element = this.$refs.codeInput;\r\n      element.style.height = 'auto';\r\n    },\r\n    formatInputs(inputs) {\r\n      return JSON.stringify(inputs, null, 2).replace(/\"/g, \"'\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 保持之前的样式配置 */\r\nhtml, body {\r\n  overflow: hidden;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.sidebar {\r\n  width: 15%;\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  padding: 10px 0;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 85%;\r\n  height: 100vh;\r\n}\r\n\r\n.selection-area {\r\n  padding: 10px 20px;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #ccc;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.upper-content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.intro-content {\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  padding: 90px;\r\n}\r\n\r\n.centered-content {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  text-align: left;\r\n}\r\n\r\n.response-block {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-input {\r\n  background-color: #e0e0e0;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  margin-bottom: 10px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  text-align: left;\r\n}\r\n\r\n.user-input pre {\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n  margin: 0;\r\n  text-align: left;\r\n}\r\n\r\n.flowchart-image {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  max-height: 600px;\r\n  object-fit: contain;\r\n  margin: 20px 0;\r\n}\r\n\r\n.input-area {\r\n  padding: 20px;\r\n  border-top: 1px solid #ccc;\r\n  background-color: #f9f9f9;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.input-row {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.code-input {\r\n  flex: 1;\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 300px;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: none;\r\n  font-family: monospace;\r\n  white-space: pre-wrap;\r\n  overflow-y: auto;\r\n  line-height: 1.5;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.submit-button, .save-button {\r\n  padding: 10px 20px;\r\n  background-color: #535553;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  flex-shrink: 0;\r\n  margin-left: 10px;\r\n}\r\n\r\n.submit-button:hover, .save-button:hover {\r\n  background-color: #888f88;\r\n}\r\n\r\n.output-area {\r\n  width: 100%;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  text-align: left;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.test-case {\r\n  background-color: #f4f4f4;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.response-text {\r\n  white-space: pre-wrap;\r\n  font-family: inherit;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .centered-content {\r\n    max-width: 100%;\r\n    padding: 0 10px;\r\n  }\r\n  .flowchart-image, .output-area, .user-input {\r\n    max-width: 100%;\r\n  }\r\n  .input-row {\r\n    max-width: 100%;\r\n    flex-direction: column;\r\n  }\r\n  .code-input {\r\n    max-width: 100%;\r\n    margin-right: 0;\r\n    margin-bottom: 10px;\r\n  }\r\n  .submit-button, .save-button {\r\n    width: 100%;\r\n  }\r\n  .selection-area {\r\n    justify-content: center;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAyEA;EACAA,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;MACAC,cAAA;MACAC,cAAA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,YAAA;MAAA;MACAC,eAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,MAAAC,OAAA,QAAAC,KAAA,CAAAC,SAAA;MACAF,OAAA,CAAAG,KAAA,CAAAC,MAAA;MACAJ,OAAA,CAAAG,KAAA,CAAAC,MAAA,GAAAJ,OAAA,CAAAK,YAAA;IACA;IACA,MAAAC,WAAA;MACA,SAAAhB,IAAA,CAAAiB,IAAA;MACA,MAAAC,WAAA,QAAAlB,IAAA;MACA;QACA,MAAAmB,eAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YAAAzB,IAAA,OAAAA,IAAA;YAAA0B,MAAA,OAAAxB;UAAA;QACA;QACA,IAAAiB,eAAA,CAAAQ,EAAA;UACA,MAAAC,MAAA,SAAAT,eAAA,CAAAU,IAAA;UACA,MAAAC,QAAA;YACA9B,IAAA,EAAAkB,WAAA;YACAa,aAAA,0BAAAH,MAAA,CAAAG,aAAA;UACA;UACA,SAAA7B,cAAA,uBAAAA,cAAA;YACA4B,QAAA,CAAAE,SAAA,GAAAJ,MAAA,CAAAI,SAAA;UACA,gBAAA9B,cAAA;YACA4B,QAAA,CAAAG,YAAA,GAAAL,MAAA,CAAAK,YAAA;UACA;UACA,KAAAhC,cAAA,CAAAiC,IAAA,CAAAJ,QAAA;UACA,KAAA9B,IAAA;UACA,KAAAmC,mBAAA;QACA;UACA,MAAAC,KAAA,SAAAjB,eAAA,CAAAU,IAAA;UACAQ,OAAA,CAAAD,KAAA,2BAAAA,KAAA,CAAAA,KAAA;UACAE,KAAA,WAAAF,KAAA,CAAAA,KAAA;QACA;MACA,SAAAA,KAAA;QACAC,OAAA,CAAAD,KAAA,2BAAAA,KAAA;QACAE,KAAA;MACA;IACA;IACAC,WAAA;MACA,SAAAvC,IAAA,CAAAiB,IAAA;MACA,MAAAuB,SAAA;QACAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;QAAA;QACAC,IAAA,aAAAtC,YAAA,CAAAuC,MAAA;QACA7C,IAAA,OAAAA,IAAA;QACAC,cAAA,WAAAA,cAAA;MACA;MACA,KAAAK,YAAA,CAAA4B,IAAA,CAAAM,SAAA;MACA,KAAAjC,eAAA,GAAAiC,SAAA,CAAAC,EAAA;MACAH,KAAA;IACA;IACAQ,WAAAC,QAAA;MACA,MAAAC,MAAA,QAAA1C,YAAA,CAAA2C,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAT,EAAA,KAAAM,QAAA;MACA,IAAAC,MAAA;QACA,KAAAzC,eAAA,GAAAyC,MAAA,CAAAP,EAAA;QACA,KAAAzC,IAAA,GAAAgD,MAAA,CAAAhD,IAAA;QACA,KAAAC,cAAA,OAAA+C,MAAA,CAAA/C,cAAA;QACA,KAAAQ,UAAA;MACA;IACA;IACA0B,oBAAA;MACA,MAAAzB,OAAA,QAAAC,KAAA,CAAAC,SAAA;MACAF,OAAA,CAAAG,KAAA,CAAAC,MAAA;IACA;IACAqC,aAAAC,MAAA;MACA,OAAA5B,IAAA,CAAAC,SAAA,CAAA2B,MAAA,WAAAC,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}