{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          try {\n            const response = await this.loginUser(this.loginForm);\n            if (response.status === 'error') {\n              this.$message.error(response.message);\n            } else {\n              this.$message.success('登录成功');\n              this.$router.push('/home');\n            }\n          } catch (error) {\n            console.error('Login error:', error);\n            this.$message.error('登录失败，请稍后重试');\n          }\n        }\n      });\n    },\n    async loginUser(loginForm) {\n      const response = await fetch('http://localhost:28080/api/login', {\n        method: 'POST',\n        body: JSON.stringify(loginForm),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return await response.json();\n    }\n  }\n};","map":{"version":3,"names":["data","loginForm","username","password","rules","required","message","trigger","methods","submitForm","$refs","validate","valid","response","loginUser","status","$message","error","success","$router","push","console","fetch","method","body","JSON","stringify","headers","json"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <h2>用户登录</h2>\r\n      <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" label-width=\"0px\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input class=\"el-input-user\" v-model=\"loginForm.username\" placeholder=\"请输入用户名\">\r\n            <template #prefix>\r\n              <img class=\"icon\" src=\"@/assets/用户.png\"/>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n          <el-input class=\"el-input-pass\" v-model=\"loginForm.password\" type=\"password\" placeholder=\"请输入密码\">\r\n            <template #prefix>\r\n              <img class=\"icon\" src=\"@/assets/密码.png\"/>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-button class=\"el-button-login\" type=\"primary\" @click=\"submitForm\">登录</el-button>\r\n        <div class=\"register-link\">\r\n          没有账号？\r\n          <router-link to=\"/register\">去注册</router-link>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'}\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs.loginForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            const response = await this.loginUser(this.loginForm);\r\n            if (response.status === 'error') {\r\n              this.$message.error(response.message);\r\n            } else {\r\n              this.$message.success('登录成功');\r\n              this.$router.push('/home');\r\n            }\r\n          } catch (error) {\r\n            console.error('Login error:', error);\r\n            this.$message.error('登录失败，请稍后重试');\r\n          }\r\n        }\r\n      });\r\n    },\r\n    async loginUser(loginForm) {\r\n      const response = await fetch('http://localhost:28080/api/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify(loginForm),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      return await response.json();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  background-image: url('@/assets/水墨背景蒙版.png');\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.login-box {\r\n  background-color: white;\r\n  padding: 60px; /* 增加内边距，保持与注册页面一致 */\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15); /* 增加阴影效果 */\r\n  width: 400px; /* 调整宽度，与注册页面一致 */\r\n  text-align: center;\r\n  font-size: 18px; /* 调整字体大小，与注册页面一致 */\r\n}\r\n\r\n.icon {\r\n  width: 30px; /* 增大图标尺寸，与注册页面一致 */\r\n  height: 30px;\r\n}\r\n\r\n.el-input-user {\r\n  height: 50px; /* 增大输入框高度，与注册页面一致 */\r\n  font-size: 18px; /* 增大字体大小，与注册页面一致 */\r\n}\r\n\r\n.el-input-pass {\r\n  height: 50px; /* 增大输入框高度，与注册页面一致 */\r\n  font-size: 18px; /* 增大字体大小，与注册页面一致 */\r\n}\r\n\r\n.el-button-login {\r\n  height: 50px; /* 增大按钮的高度，与注册页面一致 */\r\n  font-size: 20px; /* 增大按钮文字的字体大小 */\r\n  padding: 10px 20px; /* 调整按钮内边距 */\r\n  margin-top: 20px; /* 增加顶部间距 */\r\n}\r\n\r\n.register-link {\r\n  margin-top: 30px; /* 增加顶部的间距 */\r\n  color: #999;\r\n}\r\n\r\n.register-link a {\r\n  color: #409EFF;\r\n}\r\n</style>\r\n"],"mappings":";AAgCA;EACAA,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAC,KAAA,CAAAT,SAAA,CAAAU,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA,MAAAC,QAAA,cAAAC,SAAA,MAAAb,SAAA;YACA,IAAAY,QAAA,CAAAE,MAAA;cACA,KAAAC,QAAA,CAAAC,KAAA,CAAAJ,QAAA,CAAAP,OAAA;YACA;cACA,KAAAU,QAAA,CAAAE,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;UACA,SAAAH,KAAA;YACAI,OAAA,CAAAJ,KAAA,iBAAAA,KAAA;YACA,KAAAD,QAAA,CAAAC,KAAA;UACA;QACA;MACA;IACA;IACA,MAAAH,UAAAb,SAAA;MACA,MAAAY,QAAA,SAAAS,KAAA;QACAC,MAAA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAzB,SAAA;QACA0B,OAAA;UACA;QACA;MACA;MACA,aAAAd,QAAA,CAAAe,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}